// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
  {
    // No context bindings have the highest precedence.  See https://zed.dev/docs/key-bindings#precedence
    "bindings": {}
  },
  {
    "context": "Workspace",
    "bindings": {
      // Focus
      "cmd-space": "workspace::ActivateNextPane",
      "cmd-shift-space": "workspace::ActivatePreviousPane"

      // TODO better mimic Emacs split/join pane behavior
      // "ctrl-x 1": "pane::CloseAllItems"
    }
  },
  {
    "context": "Editor",
    "bindings": {
      // Movement
      "cmd-m": "editor::MoveToBeginningOfLine",
      "cmd-b": "editor::MoveToPreviousWordStart",
      "cmd-f": "editor::MoveToNextWordEnd",
      "ctrl-v": ["editor::MovePageDown", { "center_cursor": true }],
      "cmd-v": ["editor::MovePageUp", { "center_cursor": true }],
      "cmd-g cmd-g": "go_to_line::Toggle", // see also this context's "ctrl-g" and "Editor && mode == full" "ctrl-g"
      "cmd-<": "editor::MoveToBeginning",
      "cmd->": "editor::MoveToEnd",

      // Selection
      "cmd-ctrl-space": "editor::SelectLargerSyntaxNode",
      "cmd-ctrl-enter": "editor::SelectAllMatches",
      "cmd-ctrl-,": "editor::AddSelectionAbove",
      "cmd-ctrl-.": "editor::AddSelectionBelow",
      "ctrl-g": "menu::Cancel",

      // Delete
      "cmd-d": "editor::DeleteToNextWordEnd",
      "cmd-h": "editor::DeleteToPreviousWordStart",
      "ctrl-shift-h": "editor::DeleteLine",

      // Insert
      "ctrl-m": "editor::Newline",
      "cmd-;": "editor::ToggleComments",

      // Undo/Redo
      "ctrl-/": "editor::Undo",
      "ctrl-?": "editor::Redo",

      // Commands
      "cmd-x": "command_palette::Toggle"
    }
  },
  {
    "context": "Editor && mode == full",
    "use_key_equivalents": true,
    "bindings": {
      "ctrl-g": "editor::Cancel"
    }
  },
  {
    "context": "Editor && (showing_code_actions || showing_completions)",
    "use_key_equivalents": true,
    "bindings": {
      "ctrl-n": "editor::ContextMenuNext",
      "ctrl-p": "editor::ContextMenuPrev"
    }
  }
]
