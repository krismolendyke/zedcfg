// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
  {
    // No context bindings have the highest precedence.  See https://zed.dev/docs/key-bindings#precedence
    "use_key_equivalents": true,
    "bindings": {
      // Unbind ctrl-g everywhere because I'm used to hitting it repeatedly in Emacs to cancel things and I expect it
      // to do that consistently everywhere.  Unfortutately zed defaults ctrl-g to go to line which I rarely use.
      // Extra unfortunately, this has been difficult to accomplish and I had to bind various things to ctrl-g in
      // various contexts via trial and error to get it to do what I want it to do.  I'm sure this is brittle and it
      // certainly is horrible, but it was all that I could come up with right now.  The best way to see all the places
      // that I had to muck with this is to search for "ctrl-g".  I did bind go to line to "cmd-g cmd-g" like I have in
      // Emacs.
      "ctrl-g": null
    }
  },
  {
    "context": "GoToLine > Editor",
    "use_key_equivalents": true,
    "bindings": { "ctrl-g": "menu::Cancel" }
  },
  {
    "context": "Picker > Editor",
    "use_key_equivalents": true,
    "bindings": { "ctrl-g": "menu::Cancel" }
  },
  {
    "context": "BufferSearchBar > Editor",
    "use_key_equivalents": true,
    "bindings": { "ctrl-g": "buffer_search::Dismiss" }
  },
  {
    "context": "Pane > Editor",
    "use_key_equivalents": true,
    "bindings": { "ctrl-g": "editor::Cancel" }
  },
  {
    "context": "TabSwitcher > Picker",
    "use_key_equivalents": true,
    "bindings": { "ctrl-g": "menu::Cancel" }
  },
  {
    "context": "Workspace",
    "bindings": {
      "ctrl-g": "menu::Cancel",

      // Focus
      "cmd-space": "workspace::ActivateNextPane",
      "cmd-shift-space": "workspace::ActivatePreviousPane"

      // TODO better mimic Emacs split/join pane behavior
      // "ctrl-x 1": "pane::CloseAllItems"
    }
  },
  // TODO investigate Pane context for better precedence control of things
  { "context": "Pane", "use_key_equivalents": true, "bindings": {} },
  {
    "context": "Editor",
    "bindings": {
      // Movement
      "cmd-m": "editor::MoveToBeginningOfLine",
      "cmd-b": "editor::MoveToPreviousWordStart",
      "cmd-f": "editor::MoveToNextWordEnd",
      "ctrl-v": ["editor::MovePageDown", { "center_cursor": true }],
      "cmd-v": ["editor::MovePageUp", { "center_cursor": true }],
      "cmd-g cmd-g": "go_to_line::Toggle",
      "cmd-<": "editor::MoveToBeginning",
      "cmd->": "editor::MoveToEnd",

      // Selection
      "cmd-ctrl-space": "editor::SelectLargerSyntaxNode",
      "cmd-ctrl-enter": "editor::SelectAllMatches",
      "cmd-ctrl-,": "editor::AddSelectionAbove",
      "cmd-ctrl-.": "editor::AddSelectionBelow",

      // Cut/Copy/Paste
      // TODO editor::KillRingCut & editor::KillRingYank when zed groks how a kill ring actually works.
      "cmd-w": "editor::Copy",
      "ctrl-k": "editor::CutToEndOfLine",
      "ctrl-w": "editor::Cut",
      "ctrl-y": "editor::Paste",

      // Delete
      "cmd-d": "editor::DeleteToNextWordEnd",
      "cmd-h": "editor::DeleteToPreviousWordStart",
      "ctrl-shift-h": "editor::DeleteLine",

      // Insert
      "ctrl-m": "editor::Newline",
      "cmd-;": "editor::ToggleComments",

      // Undo/Redo
      "ctrl-/": "editor::Undo",
      "ctrl-?": "editor::Redo",

      // Commands
      "cmd-x": "command_palette::Toggle",
      "ctrl-x ctrl-r": "file_finder::Toggle"
    }
  },
  {
    "context": "Editor && (showing_code_actions || showing_completions)",
    "use_key_equivalents": true,
    "bindings": {
      "ctrl-n": "editor::ContextMenuNext",
      "ctrl-p": "editor::ContextMenuPrev"
    }
  }
]
